head	1.5;
access;
symbols;
locks
	vhaag:1.5; strict;
comment	@; @;


1.5
date	2011.12.19.20.47.27;	author vhaag;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.15.22.27.50;	author vhaag;	state Exp;
branches;
next	1.3;

1.3
date	2011.11.08.16.23.42;	author vhaag;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.08.15.38.00;	author vhaag;	state Exp;
branches;
next	1.1;

1.1
date	2011.11.07.17.17.08;	author vhaag;	state Exp;
branches;
next	;


desc
@@


1.5
log
@checkpoint pre-Fink removal
@
text
@;;;
;;; Startup kit unsets
;;;

;; Load more starter kit passages
(starter-kit-load "csharp")
(starter-kit-load "eshell")
(starter-kit-load "lisp")
(starter-kit-load "python")

;; Undo ido mode settings -- I really don't like it.
(ido-mode nil)
(global-set-key (kbd "C-x C-i") 'indent-rigidly)
(global-set-key (kbd "C-x M-f") 'find-file-other-window)
(global-set-key (kbd "C-x f") 'set-fill-column)

;; Ditto windmove
; (windmove-default-keybindings 'alt)

;; Pretty-printing a lambda character? Really? No thanks.
(remove-hook 'coding-hook 'pretty-lambdas)
(remove-hook 'haskell-mode-hook 'pretty-lambdas-haskell)

(setq-default indicate-empty-lines nil)
(setq-default shift-select-mode t)
(remove-hook 'text-mode-hook 'turn-on-flyspell)
(setq browse-url-browser-function 'browse-default-macosx-browser)

;; re-set the keybindings for searching
(global-set-key (kbd "C-s") 'isearch-forward)
(global-set-key (kbd "\C-r") 'isearch-backward)
(global-set-key (kbd "C-M-s") 'isearch-forward-regexp)
(global-set-key (kbd "C-M-r") 'isearch-backward-regexp)

;; move backup directory (even though maybe not used) over to local home
(setq backup-directory-alist `(("." . ,(expand-file-name
                                         "~/.emacs.backups"))))

;; move auto-save list over to local home
(setq auto-save-list-file-prefix  "~/.emacs.backups/auto-save-list/.saves-")

;;;
;;; Setup exec path and make load path adjustments
;;;

(setq exec-path
      (quote
       ("/sw/bin"
        "/sw/sbin"
        "/usr/local/bin"
        "/usr/bin"
        "/usr/sbin"
        "/bin"
        "~/bin"
        "/Applications/Emacs.app/Contents/MacOS/libexec"
        "/Applications/Emacs.app/Contents/MacOS/bin"
        nil))
      )

;;;
;;; Mode specific adjustments
;;; 

;;; Abbreviation mode
(setq default-abbrev-mode t)
(setq abbrev-file-name  "~/.emacs.d/vhaag/abbrev_defs")
(if (file-exists-p abbrev-file-name)
    (quietly-read-abbrev-file))
(setq save-abbrevs t)

;;; Aspell config
(setq-default ispell-program-name "/usr/local/bin/aspell")
(setq-default ispell-list-command "list")
(setq-default ispell-extra-args '("--sug-mode=ultra"))
(setq-default ispell-dictionary "en_CA")

;;; CSharp mode refinement
(setq-default chsarp-want-imenu nil)

;;; Look and feel config
(load (expand-file-name "~/lib/lisp/color-theme-viktor"))
(add-to-list 'color-themes
             '(color-theme-viktor
               "Viktor's Theme"
               "Viktor Haag <viktor.haag@@gmail.com>"))
(color-theme-viktor)
(when window-system
  (tool-bar-mode -1)
  (tooltip-mode -1)
  (create-fontset-from-fontset-spec
   "-apple-andale mono-medium-r-normal--12-*-*-*-*-*-fontset-mac,
ascii:-apple-andale mono-medium-r-normal--12-*-*-*-m-*-mac-roman,
latin-iso8859-1:-apple-andale mono-medium-r-normal--12-*-*-*-m-*-mac-roman,
mule-unicode-0100-24ff:-apple-andale mono-medium-r-normal--12-*-*-*-m-*-mac-roman")
  (create-fontset-from-fontset-spec
   "-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-fontset-mac,
ascii:-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-iso10646-1,
latin-iso8859-1:-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-iso10646-1,
mule-unicode-0100-24ff:-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-iso10646-1")
  (create-fontset-from-fontset-spec
   "-apple-lucida grande-*-*-normal--12-*-*-*-*-*-fontset-mac,
ascii:-apple-lucida grande-*-*-normal--12-*-*-*-m-*-mac-roman,
latin-iso8859-1:-apple-lucida grande-*-*-normal--12-*-*-*-m-*-mac-roman,
mule-unicode-0100-24ff:-apple-lucida grande-*-*-normal--12-*-*-*-m-*-mac-roman")
  (setq x-fixed-font-alist
        '("Font Menu"
          ("My Fonts"
           ("Andale Mono 12" "-apple-andale mono-medium-r-normal--12-*-*-*-*-*-fontset-mac")
           ("Inconsolata 12" "-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-fontset-mac")
           ("Lucida Console 12" "-apple-lucida console-*-*-normal--12-*-*-*-*-*-fontset-mac")
           ("Lucida Grande 12" "-apple-lucida grande-*-*-normal--12-*-*-*-*-*-fontset-mac")
           )))
  (setq default-frame-alist
        '(
          (cursor-color . "red")
          (font . "-apple-inconsolata-medium-r-normal--12-*-*-*-*-*-iso10646-1")
          (foreground-color . "black")
          (background-color . "white")
          (menu-bar-lines . 1)
                                        ;        (width . 95)
                                        ;        (height . 45)
          ))
)

;;; Lorem ipsum functions
(require 'lorem-ipsum)

;;; ls mode config
;; This depends upon having fink coreutils installed, putting the GNU
;; utils into the path with 'g' prefixes. If we have GNU ls in place
;; as 'ls' then we don't need this block.
(require 'ls-lisp)
(setq ls-lisp-use-insert-directory-program t)
(setq insert-directory-program (purecopy "gls"))

;;; Minibuffer settings
(define-key minibuffer-local-filename-completion-map (kbd "SPC")
  'minibuffer-complete-word)
(define-key minibuffer-local-must-match-filename-map (kbd "SPC")
  'minibuffer-complete-word)

;;; Modeline settings
(display-time-mode t)

;;; Recent files settings
(require 'recentf)
(recentf-mode 1)
(setq-default recentf-menu-filter 'recentf-sort-directories-descending)

;;; Table mode
(require 'table)
(add-hook 'text-mode-hook 'table-recognize)

;;; Version control settings
; (require 'dsvn)
(require 'psvn)
                                        ;(setq svn-status-verbose nil)


;;;
;;; Miscellaneous settings
;;;

(setq default-major-mode 'indented-text-mode)
(setq-default make-backup-files nil)
(setq-default track-eol t)
(setq-default fill-column 80)

;; (setq-default case-fold-search nil)

;;;
;;; Keyboard/Mouse Settings
;;;

;;; Scrolling behaviour
(setq-default scroll-step 1)
(setq-default mouse-wheel-scroll-amount (quote (1 ((shift). 5) ((control)))))

;;; Keyconfig
(setq-default ns-alternate-modifier (quote alt))
(setq-default ns-command-modifier (quote meta))
(global-set-key "\M-`" 'other-frame)
;; (global-set-key [kp-decimal] 'delete-char)    ; .
;; (global-set-key [kp-delete] 'delete-char) ; Delete
;; (global-set-key [kp-0] 'auto-fill-mode) ; shift-keypad-0
;; (global-set-key [kp-7] 'backward-word)  ; 7
;; (global-set-key [kp-8] 'previous-line)  ; 8
;; (global-set-key [kp-9] 'forward-word)   ; 9
;; (global-set-key [kp-4] 'backward-char)  ; 4
;; (global-set-key [kp-5] 'recenter)       ; 5
;; (global-set-key [kp-6] 'forward-char)   ; 6
;; (global-set-key [kp-1] 'beginning-of-line) ; 1
;; (global-set-key [kp-2] 'next-line)      ; 2
;; (global-set-key [kp-3] 'end-of-line)    ; 3

;; (global-set-key [kp-divide] 'beginning-of-buffer) ; PF1
;; (global-set-key [kp-multiply] 'end-of-buffer) ; PF2
;; (global-set-key [kp-subtract] 'scroll-down)   ; PF3
;; (global-set-key [kp-add] 'scroll-up)     ; PF4

;; ;; fudge mac key combo to rotate through app windows



@


1.4
log
@Moved abbreviations file -- it oughta be everywhere
@
text
@d39 2
d72 1
a72 1
(setq-default ispell-program-name "/sw/bin/aspell")
d125 3
d155 2
a156 2
(require 'dsvn)
                                        ;(require 'psvn)
@


1.3
log
@Added back starter kit loads that starterkit-24 removed, plus hid window system
stuff behind a window-system when.
@
text
@d17 3
d39 2
d42 2
d58 4
d63 5
a67 3
;; (setq-default abbrev-mode t)
;; (read-abbrev-file)
;; (setq save-abbrevs t)
d75 4
a78 1
;;; Default look and feel config
a87 1
  (menu-bar-mode -1)
d140 14
a153 3
;;; SVN source control settings
(require 'psvn)
(setq svn-status-verbose nil)
d158 1
@


1.2
log
@initial
@
text
@d4 7
d24 1
d34 1
a34 1
                                        (concat dotfiles-dir "~/.emacs.backups")))))
d62 1
a62 1
;;; Color theme config
d69 38
@


1.1
log
@Initial revision
@
text
@d1 28
a28 1
;;; Setup exec path
d50 1
d54 8
d76 2
a77 8
;; ;;; ReST mode configuration
;; (require 'rst)
;; (add-hook 'rst-mode-hook 
;;            (function
;;             (lambda ()
;;               "Nuke the default rst-mode abbrev table"
;;               (clear-abbrev-table rst-mode-abbrev-table))))

d80 1
a82 1

d87 3
a91 9
;; (display-time-mode t)
;; (setq-default fill-column 80)
;; (setq-default line-number-mode t)
;; (setq-default make-backup-files nil)
;; (setq-default next-line-add-newlines nil)
;; (setq-default require-final-newline t)
;; (setq-default track-eol t)
;; (setq-default visible-bell t)

d104 1
d123 1
a123 2
;; (global-set-key [home] 'beginning-of-buffer)
;; (global-set-key [end]  'end-of-buffer)
a124 2
;; ;; fudge mac key combo to rotate through app windows
;; (global-set-key "\M-`" 'other-frame)
@
